//Player.cs

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
//private Animator animator;
public class Player : MonoBehaviour {
    [SerializeField]
    private float speed;
    [SerializeField]
    private Stat health;
    [SerializeField]
    private Stat mana;
    [SerializeField]
    private float healthValue;
    [SerializeField]
    private float maxhealth;
   // protected virtual void start()
    //{
    //    animator = GetComponent<Animator>();
    //}
    private Vector2 direction;

	// Use this for initialization
	void Start () {
        direction = Vector2.up;
	}
	
	// Update is called once per frame
	void Update () {
        GetInput();
        move();
        health.MyMaxValue = 100;
        mana.MyMaxValue = 100;
	}

    public void move()
    {
        transform.Translate(direction*speed*Time.deltaTime);
        
    }

    private void GetInput()
    {
        /// this is for debugging only
        /// 
        if (Input.GetKeyDown(KeyCode.I))
        {
            health.MyCurrentValue -= 10;
            mana.MyCurrentValue -= 10;
        }

        if (Input.GetKeyDown(KeyCode.O))
        {
            health.MyCurrentValue += 10;
            mana.MyCurrentValue += 10;
        }
        direction = Vector2.zero;
        if (Input.GetKey(KeyCode.W))
        {
            direction += Vector2.up;
        }

        if (Input.GetKey(KeyCode.A))
        {
            direction += Vector2.left;
        }

        if (Input.GetKey(KeyCode.S))
        {
            direction += Vector2.down;
        }

        if (Input.GetKey(KeyCode.D))
        {
            direction += Vector2.right;
        }
    }
}







//Stat.cs


using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Stat : MonoBehaviour {

    private Image content;

    [SerializeField]
    private Text statValue;

    private float currentFill;

    public float MyMaxValue{ get; set; }

    private float currentValue;

    public float MyCurrentValue
    {
        get
        {
            return currentValue;
        }

        set
        {
            if (value > MyMaxValue){
                currentValue = MyMaxValue;
            }
            else if (value < 0)
            {
                currentValue = 0;
            }
            else
            {
                currentValue = value;
            }

            currentFill = currentValue / MyMaxValue;


            statValue.text = MyCurrentValue + "/" + MyMaxValue;
        }
    }
    // Use this for initialization
    void Start()
    {
        content = GetComponent<Image>();

    }
	
	// Update is called once per frame
	void Update () {
        content.fillAmount = currentFill;
        //Debug.Log(MyCurrentValue);
	}

    public void Initialize (float currentValue, float maxValue)
    {

      //  MyMaxValue = maxValue;
       // MyCurrentValue = currentValue;
    //}
}}



